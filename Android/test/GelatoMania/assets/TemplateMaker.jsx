#target photoshopfunction TypeOf(obj) {    if(typeof(obj) == 'object') {        if(obj.length)            return 'array';        else            return 'object';    } else {        return typeof(obj);    }}function ObjectToJSON(o) {    var tk = "\"";    var parse = function(_o, s) {        var a = [], t;        var sk = "\n";        for(var i = 0; i < s; i++)            sk += "\t";        for(var p in _o) {            if(_o.hasOwnProperty(p)){                t = _o[p];                var preS = (TypeOf(_o) == "array" ? "" : tk + p + tk + ":");                if(TypeOf(t) == "object") {                    a[a.length] = preS + "{" + sk + "\t" + arguments.callee(t, s + 1).join("," + sk + "\t") + sk + "}";                } else if(TypeOf(t) == "array") {                    a[a.length] = preS + "[" + sk + "\t" + arguments.callee(t, s + 1).join("," + sk + "\t") + sk + "]";                } else {                    if(TypeOf(t) == "string") {                        a[a.length] = preS + tk + t.toString() + tk;                    } else {                        a[a.length] = preS + t.toString();                    }                }            }        }        return a;    }    return "{" + parse(o, 0).join(", ") + "}";}var doc = app.activeDocument;Folder.current = File(doc.fullName).parent;var obj = new Object;var f = new File(Folder.current.fsName + "/template.json");f.remove();f.lineFeed = "Macintosh";f.open("w", "TEXT", "????");function LayerVisible(target, visible) {    target.visible = visible;    if(target.typename == "LayerSet") {        for(var i = 0; i < target.layers.length; i++)            LayerVisible(target.layers[i], visible);     }}function CropTemplate(target, docTarget, path) {    bounds = target.bounds;            bounds[0].convert("pt");    bounds[1].convert("pt");    bounds[2].convert("pt");    bounds[3].convert("pt");        bounds[0].value = bounds[0].value - 1;    bounds[1].value = bounds[1].value - 1;    bounds[2].value = bounds[2].value + 1;    bounds[3].value = bounds[3].value + 1;    docTarget.crop(bounds);    docTarget.saveAs(new File(Folder.current.fsName + "/slice/" + path), new PNGSaveOptions, true);}function MakeTemplate(target, preN, docTarget, objTarget) {    var n = target.name;    if(preN != "")        n = preN + "_" + target.name;    target.visible = true;    if(target.typename == "LayerSet") {        objTarget[target.name] = new Object;        for(var i = 0; i < target.layers.length; i++)            MakeTemplate(target.layers[i], n, docTarget, objTarget[target.name]);     } else if(target.typename == "ArtLayer") {        objTarget[target.name] = new Object;        objTarget[target.name]["path"] = n + ".png";        objTarget[target.name]["aabb"] = new Array();        objTarget[target.name]["aabb"][0] = target.bounds[0].value - 1 - doc.width.value * 0.5;        objTarget[target.name]["aabb"][1] = target.bounds[1].value - 1 - doc.height.value * 0.5;        objTarget[target.name]["aabb"][2] = target.bounds[2].value + 1 - doc.width.value * 0.5;        objTarget[target.name]["aabb"][3] = target.bounds[3].value + 1 - doc.width.value * 0.5;        docTarget.suspendHistory("mark", "CropTemplate(target, docTarget, objTarget[target.name][\"path\"])");        executeAction(charIDToTypeID("undo"), undefined, DialogModes.NO);    }    target.visible = false;}app.preferences.rulerUnits = Units.PIXELS;var folder = new Folder(Folder.current.fsName + "/" + "slice");if(folder.created) {    var fileList = folder.getFiles();    for(var i = 0; i < fileList.length; i++) {        if(fileList[i] instanceof File)            fileList[i].remove();    }} else {    folder.create();}for(var i = 0; i < doc.layers.length; i++)    LayerVisible(doc.layers[i], false);for(var i = 0; i < doc.layers.length; i++)    MakeTemplate(doc.layers[i], "", doc, obj);for(var i = 0; i < doc.layers.length; i++)    LayerVisible(doc.layers[i], true);f.write(ObjectToJSON(obj));f.close();alert("done");